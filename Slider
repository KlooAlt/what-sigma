-- Variables
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local camera = workspace.CurrentCamera
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

-- Ensure the character is R6
humanoid.RigType = Enum.HumanoidRigType.R6

-- Create the UI
local screenGui = Instance.new("ScreenGui")
local sliderFrame = Instance.new("Frame")
local sliderBar = Instance.new("Frame")
local sliderKnob = Instance.new("ImageButton")

-- Set up UI properties
screenGui.Parent = player:WaitForChild("PlayerGui")
screenGui.Name = "FOVSpeedSlider"

sliderFrame.Size = UDim2.new(0, 200, 0, 30)
sliderFrame.Position = UDim2.new(0, 10, 0.5, -15)
sliderFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
sliderFrame.BorderSizePixel = 0
sliderFrame.Parent = screenGui

sliderBar.Size = UDim2.new(0.9, 0, 0.2, 0)
sliderBar.Position = UDim2.new(0.05, 0, 0.4, 0)
sliderBar.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
sliderBar.BorderSizePixel = 0
sliderBar.Parent = sliderFrame

sliderKnob.Size = UDim2.new(0, 20, 0, 20)
sliderKnob.Position = UDim2.new(0.5, -10, 0.3, 0)
sliderKnob.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
sliderKnob.BorderSizePixel = 0
sliderKnob.Image = "rbxassetid://3570695787" -- Rounded knob
sliderKnob.ScaleType = Enum.ScaleType.Slice
sliderKnob.SliceCenter = Rect.new(100, 100, 100, 100)
sliderKnob.Parent = sliderFrame

-- Slider settings
local minFOV = 70
local maxFOV = 120
local minSpeed = 16
local maxSpeed = 75

-- Function to update speed and FOV
local function updateValues(sliderPosition)
    local percentage = sliderPosition / sliderBar.AbsoluteSize.X
    local targetFOV = minFOV + (maxFOV - minFOV) * percentage
    local targetSpeed = minSpeed + (maxSpeed - minSpeed) * percentage

    -- Smooth transitions for FOV and speed
    game:GetService("TweenService"):Create(
        camera,
        TweenInfo.new(0.1, Enum.EasingStyle.Linear),
        {FieldOfView = targetFOV}
    ):Play()

    game:GetService("TweenService"):Create(
        humanoid,
        TweenInfo.new(0.1, Enum.EasingStyle.Linear),
        {WalkSpeed = targetSpeed}
    ):Play()
end

local dragging = false

-- Begin dragging
sliderKnob.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
    end
end)

-- End dragging
sliderKnob.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = false
    end
end)

-- Update slider position based on input
game:GetService("UserInputService").InputChanged:Connect(function(input)
    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        local mousePosition = input.Position.X
        local sliderStart = sliderBar.AbsolutePosition.X
        local sliderEnd = sliderStart + sliderBar.AbsoluteSize.X

        local newPosition = math.clamp(mousePosition, sliderStart, sliderEnd)
        local relativePosition = newPosition - sliderStart

        sliderKnob.Position = UDim2.new(0, relativePosition - sliderKnob.AbsoluteSize.X / 2, 0.3, 0)
        updateValues(relativePosition)
    end
end)

-- Initial FOV and speed setup
camera.FieldOfView = minFOV
humanoid.WalkSpeed = minSpeed
